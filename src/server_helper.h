#ifndef SERVER_HELPER_HEADER
#define SERVER_HELPER_HEADER

//response messages
const char *error1 = "HTTP/1.1 405 Method Not Allowed\nContent-Type: text/plain\nContent-Length: 103\n\nServer received invalid command, only configured to respond to 'POST' commands. No data transferred.\n";
const char *error2 = "HTTP/1.1 400 Bad Request\nContent-Type: text/plain\nContent-Length: 57\n\nServer received invalid command, No data transferred.\n";
char invalidcommands[9][10] = {"GET","HEAD","DELETE","CONNECT","OPTIONS","TRACE","PATCH"};
const char *error3 = "HTTP/1.1 415 Unsupported Media Type\nContent-Type: text/plain\nContent-Length: 93\n\nServer received invalid content type, requires 'multipart/form-data', No data transferred.\n";
const char *error4 = "HTTP/1.1 400 Bad Request\nContent-Type: text/plain\nContent-Length: 50\n\nServer received empty file, No data transferred.\n";
const char *success = "HTTP/1.1 200 OK\nContent-Type: text/plain\nContent-Length: 14\n\nFile Received\n";
const char *expectresponse = "HTTP/1.1 100 Continue\n";
const unsigned char STARTBYTES[] = {0x93,0x4e,0x55,0x4d,0x50,0x59}; //Data starts with '\nNUMPY'
const unsigned char TESTSTRING[] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x01, 0xcd, 0x24, 0xa7, 0x34, 0xcf, 0x6e, 0xc0, 0xa8, 0x9b, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc1, 0xa8, 0x9b, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x1f, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x48, 0x3c, 0xa7, 0x9e, 0x7f, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0xc1, 0xa8, 0x9b, 0xfe, 0x7f, 0x00, 0x00, 0xa0, 0x3c, 0x99, 0xa7, 0x01, 0x00, 0x00, 0x00, 0xd6, 0x0d, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x32, 0x8f, 0x3b, 0x47, 0x68, 0x2e, 0x3c, 0xe0, 0x0c, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc1, 0xa8, 0x9b, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x32, 0x2f, 0x85, 0x96, 0x5f};
const char *pipestatusfname = "/home/ubuntu/proj/dsa110-shell/dsa110-nsfrb/src/.pipestatus.txt";
const char *serverlogfname = "/home/ubuntu/proj/dsa110-shell/dsa110-nsfrb/src/server_log.txt";
//HTTP REQUEST STRUCTURE: This struct will be populated with header values from the client request
struct REQUEST {
        char Host[32];
        char UserAgent[32];
        char Accept[16];
        int ContentLength;
        char Expect[16];
        char ContentType[20];
        unsigned char boundary[40];
        char message[512];
        char fname[128];
};

int update_pipestatus(char *fname) {
        FILE *pipestatus;
        pipestatus = fopen(pipestatusfname,"w");
        fprintf(pipestatus,"%s failed\n",fname);
        fclose(pipestatus);
        return 0;
}


#endif
